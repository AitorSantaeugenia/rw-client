{"ast":null,"code":"var _jsxFileName = \"/home/aitor/Desktop/ironhack/Web Dev/projects/reto_web/client/src/pages/ProjectListPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport AddProject from \"./../components/AddProject\";\nimport ProjectCard from \"./../components/ProjectCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\n\nfunction ProjectListPage() {\n  _s();\n\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const getAllProjects = () => {\n    // Get the token from the localStorage\n    const storedToken = localStorage.getItem('authToken'); // Send the token through the request \"Authorization\" Headers\n\n    axios.get(`${API_URL}/projects`, {\n      headers: {\n        Authorization: `Bearer ${storedToken}`\n      }\n    }).then(response => {\n      setProjects(response.data);\n      setLoading(false);\n    }).catch(error => console.log(error));\n  }; // We set this effect will run only once, after the initial render\n  // by setting the empty dependency array - []\n\n\n  useEffect(() => {\n    getAllProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ProjectListPage\",\n    children: [/*#__PURE__*/_jsxDEV(AddProject, {\n      refreshProjects: getAllProjects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this), !loading && (projects === null || projects === void 0 ? void 0 : projects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, { ...project\n    }, project._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 48\n    }, this)))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProjectListPage, \"/sSTRhBEIMg4JwjXzWRFyM3cm2A=\");\n\n_c = ProjectListPage;\nexport default ProjectListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectListPage\");","map":{"version":3,"sources":["/home/aitor/Desktop/ironhack/Web Dev/projects/reto_web/client/src/pages/ProjectListPage.js"],"names":["useState","useEffect","axios","AddProject","ProjectCard","API_URL","process","env","REACT_APP_API_URL","ProjectListPage","projects","setProjects","loading","setLoading","getAllProjects","storedToken","localStorage","getItem","get","headers","Authorization","then","response","data","catch","error","console","log","map","project","_id"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;;AAGA,SAASC,eAAT,GAA2B;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAK,CAACY,OAAD,EAASC,UAAT,IAAuBb,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMc,cAAc,GAAG,MAAM;AAC3B;AACA,UAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAApB,CAF2B,CAI3B;;AACAf,IAAAA,KAAK,CACFgB,GADH,CAEG,GAAEb,OAAQ,WAFb,EAGE;AAAEc,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASL,WAAY;AAAvC;AAAX,KAHF,EAKGM,IALH,CAKSC,QAAD,IAAc;AAClBX,MAAAA,WAAW,CAACW,QAAQ,CAACC,IAAV,CAAX;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KARH,EASGW,KATH,CASUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CATpB;AAUD,GAfD,CAJyB,CAqBzB;AACA;;;AACAxB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BAEE,QAAC,UAAD;AAAY,MAAA,eAAe,EAAEA;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFF,EAIGF,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJd,EAKI,CAACA,OAAD,KAAYF,QAAZ,aAAYA,QAAZ,uBAAYA,QAAQ,CAAEkB,GAAV,CAAeC,OAAD,iBAAa,QAAC,WAAD,OAAmCA;AAAnC,OAAkBA,OAAO,CAACC,GAA1B;AAAA;AAAA;AAAA;AAAA,YAA3B,CAAZ,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAtCQrB,e;;KAAAA,e;AAwCT,eAAeA,eAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport AddProject from \"./../components/AddProject\";\nimport ProjectCard from \"./../components/ProjectCard\";\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\n\nfunction ProjectListPage() {\n  const [projects, setProjects] = useState([]);\n  const[loading,setLoading] = useState(true)\n\n  const getAllProjects = () => {\n    // Get the token from the localStorage\n    const storedToken = localStorage.getItem('authToken');\n\n    // Send the token through the request \"Authorization\" Headers\n    axios\n      .get(\n      `${API_URL}/projects`,\n      { headers: { Authorization: `Bearer ${storedToken}` } }\n    )\n      .then((response) => {\n        setProjects(response.data)\n        setLoading(false)\n      })\n      .catch((error) => console.log(error));\n  };\n\n  // We set this effect will run only once, after the initial render\n  // by setting the empty dependency array - []\n  useEffect(() => {\n    getAllProjects();\n  }, [] );\n\n  \n  return (\n    <div className=\"ProjectListPage\">\n      \n      <AddProject refreshProjects={getAllProjects} />\n\n      {loading && <div>Loading...</div>}\n      { !loading && projects?.map((project) => <ProjectCard key={project._id} {...project} />  )} \n       \n    </div>\n  );\n}\n\nexport default ProjectListPage;\n\n"]},"metadata":{},"sourceType":"module"}