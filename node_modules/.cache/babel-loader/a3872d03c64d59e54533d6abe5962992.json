{"ast":null,"code":"var _jsxFileName = \"/home/aitor/Desktop/ironhack/Web Dev/projects/reto_web/client/src/components/AnonRoute/AnonRoute.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { AuthContext } from '../../context/auth.context';\nimport { Redirect, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AnonRoute(props) {\n  _s();\n\n  const {\n    to,\n    exact,\n    component: Component,\n    ...restProps\n  } = props;\n  const {\n    isLoggedIn,\n    isLoading\n  } = useContext(AuthContext); // If the authentication is still loading ⏳\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 24\n  }, this); // If the user is already logged in, redirect him to home page\n\n  if (isLoggedIn) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 25\n  }, this); // If the user is not logged in yet, allow him to see the page\n\n  return /*#__PURE__*/_jsxDEV(Route, {\n    to: to,\n    exact: exact,\n    component: Component,\n    ...restProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AnonRoute, \"dtSZR+jElVUQM0w2A5X/Fn6XWp8=\");\n\n_c = AnonRoute;\nexport default AnonRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnonRoute\");","map":{"version":3,"sources":["/home/aitor/Desktop/ironhack/Web Dev/projects/reto_web/client/src/components/AnonRoute/AnonRoute.js"],"names":["useContext","AuthContext","Redirect","Route","AnonRoute","props","to","exact","component","Component","restProps","isLoggedIn","isLoading"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACzB,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,SAAS,EAAEC,SAAxB;AAAmC,OAAGC;AAAtC,MAAoDL,KAA1D;AAEA,QAAM;AAAEM,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA4BZ,UAAU,CAACC,WAAD,CAA5C,CAHyB,CAKzB;;AACA,MAAIW,SAAJ,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CANU,CAQzB;;AACA,MAAID,UAAJ,EAAgB,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP,CATS,CAWzB;;AACA,sBAAO,QAAC,KAAD;AAAO,IAAA,EAAE,EAAEL,EAAX;AAAe,IAAA,KAAK,EAAEC,KAAtB;AAA6B,IAAA,SAAS,EAAEE,SAAxC;AAAA,OAAuDC;AAAvD;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;GAbQN,S;;KAAAA,S;AAeT,eAAeA,SAAf","sourcesContent":["import { useContext } from 'react';\nimport { AuthContext } from '../../context/auth.context';\nimport { Redirect, Route } from 'react-router-dom';\n\nfunction AnonRoute(props) {\n\tconst { to, exact, component: Component, ...restProps } = props;\n\n\tconst { isLoggedIn, isLoading } = useContext(AuthContext);\n\n\t// If the authentication is still loading ⏳\n\tif (isLoading) return <p>Loading ...</p>;\n\n\t// If the user is already logged in, redirect him to home page\n\tif (isLoggedIn) return <Redirect to=\"/\" />;\n\n\t// If the user is not logged in yet, allow him to see the page\n\treturn <Route to={to} exact={exact} component={Component} {...restProps} />;\n}\n\nexport default AnonRoute;\n"]},"metadata":{},"sourceType":"module"}